# **what?**
# This workflow will generate a series of docker images for dbt and push them to the github container registry
#
# **why?**
# Docker images for dbt are used in a number of important places throughout the dbt ecosystem.
# This is how we keep those images up-to-date.
#
# **when?**
# This is triggered manually
name: Docker release

permissions:
  packages: write

on:
  workflow_call:
    inputs:
      package:
        description: The package to release
        type: string
        required: true
      version_number:
        description: The version number to release as a SemVer (e.g. 1.0.0b1, without `latest` or `v`)
        type: string
        required: true
      test_run:
        description: Test Run (don't publish)
        type: boolean
        default: true

jobs:
  version_metadata:
    name: "Get version metadata"
    runs-on: ubuntu-latest
    outputs:
      fully_qualified_tags: ${{ steps.tags.outputs.fully_qualified_tags }}
    steps:

      - name: "Get the tags to publish"
        id: tags
        # this cannot be relative because this workflow is called from multiple repos
        # in addition to a manual trigger
        uses: dbt-labs/dbt-release/.github/actions/latest-wrangler@main
        with:
          package_name: ${{ inputs.package }}
          new_version: ${{ inputs.version_number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}


  build_and_push:
    name: "Set up Docker image builder, build and push"
    runs-on: ubuntu-latest
    needs: [version_metadata]
    steps:
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Log in to GHCR"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Log publishing configuration"
        shell: bash
        run: |
          echo Package:          ${{ inputs.package }}
          echo Version:          ${{ inputs.version_number }}
          echo Tags:             ${{ needs.version_metadata.outputs.fully_qualified_tags }}

      - name: "Build and push `${{ inputs.package }}`"
        uses: docker/build-push-action@v5
        with:
          file: docker/Dockerfile
          push: ${{ !inputs.test_run }}
          platforms: linux/amd64
          target: ${{ inputs.package }}
          build-args: commit_ref=v${{ inputs.version_number }}
          tags: ${{ needs.version_metadata.outputs.fully_qualified_tags }}
